basePath: /
definitions:
  delivery.ErrorResponse:
    additionalProperties: true
    type: object
  product.Product:
    properties:
      id:
        type: string
      name:
        type: string
      price:
        type: number
    required:
    - name
    - price
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server for a Go hexagonal architecture.
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://swagger.io/terms/
  title: Test-Go API
  version: "1.0"
paths:
  /products:
    get:
      description: Get a list of all products
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/product.Product'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
      summary: Get all products
      tags:
      - products
    post:
      consumes:
      - application/json
      description: Create a new product with the provided details
      parameters:
      - description: Product Data
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/product.Product'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/product.Product'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
      summary: Create a new product
      tags:
      - products
  /products/{id}:
    delete:
      description: Delete an existing product by its ID
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
      summary: Delete a product by ID
      tags:
      - products
    get:
      description: Get details of a product by its ID
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/product.Product'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
      summary: Get a product by ID
      tags:
      - products
    put:
      consumes:
      - application/json
      description: Update the details of an existing product by its ID
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      - description: Product Data
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/product.Product'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/product.Product'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
      summary: Update an existing product
      tags:
      - products
swagger: "2.0"
